using System;

public class HelloWorld
{
     static List<string> name = new List<string>{"Amy", "Jake", "Rosa", "Raymond", "Terry"}; 
     static List<string> surname = new List<string>{"Santiago", "Peralta", "Diaz", "Holt", "Jeffords"}; 

    static List<long> phoneNumber = new List<long>{2342834499, 1235436688, 1238495500, 9874637288, 3482739577};
    public static void yeniNumara(){
        Console.WriteLine("Lütfen isim giriniz: ");
        string newName = Console.ReadLine();
        Console.WriteLine("Lütfen soyisim giriniz: ");
        string newSurname = Console.ReadLine();
        Console.WriteLine("Lütfen telefon numarası giriniz: ");
        long newPhoneNumber = long.Parse(Console.ReadLine());

        name.Add(newName);
        surname.Add(newSurname);
        phoneNumber.Add(newPhoneNumber);

        for(int i=0; i<name.Count;i++){
                    Console.WriteLine($"{name[i]} {surname[i]} {phoneNumber[i]}");
        }


    }
    public static void numaraSilme(){
        Console.WriteLine("Lütfen numarasını silmek istediğiniz kişinin adını ya da soyadını giriniz: ");
        string girdi = Console.ReadLine();
        bool nameIcın = name.Contains(girdi);
        bool surnameIcın = surname.Contains(girdi);
        if(nameIcın||surnameIcın){
            for (int i = 0; i < name.Count; i++)
        {
            if (name[i] == girdi || surname[i] == girdi)
            {
                Console.WriteLine($"{name[i]} {surname[i]}" + " isimli kişi rehberden silinmek üzere onaylıyor musunuz? (y/n)");
                string onay = Console.ReadLine();
                switch(onay){
                    case "y":
                    case "Y":
                        name.RemoveAt(i);
                        break;
                    case "n":
                    case "N":
                        secim();
                        break;
                }
                rehberListeleme();
            }
        }
        }else{
            Console.WriteLine("Aradığınız kriterlere uygun veri rehberde bulunamadı. Lütfen bir seçim yapınız.");
            Console.WriteLine("* Silmeyi sonlandırmak için : (1)");
            Console.WriteLine("* Yeniden denemek için : (2)");
            int a = int.Parse(Console.ReadLine());
            switch(a){
                case 1:
                secim();
                break;
                case 2:
                numaraSilme();
                break;
            }
        }
    }
    public static void numaraGuncelleme(){
        Console.WriteLine("Lütfen numarasını silmek istediğiniz kişinin adını ya da soyadını giriniz: ");
        string girdi = Console.ReadLine();
        bool nameIcın = name.Contains(girdi);
        bool surnameIcın = surname.Contains(girdi);
        if(nameIcın||surnameIcın){
            for (int i = 0; i < name.Count; i++)
        {
            if (name[i] == girdi || surname[i] == girdi)
            {
                Console.WriteLine($"{name[i]} {surname[i]}" + " isimli kişinin numarasını güncellemek için numarayı yazın:");
                long newNumber = long.Parse(Console.ReadLine());
                phoneNumber[i] = newNumber;
                Console.WriteLine($"{name[i]} {surname[i]}" + " isimli kişinin numarası" + $"Index{i}: {phoneNumber[i]}" + "olarak güncellendi.");
            }
        }
        }else{
            Console.WriteLine("Aradığınız kriterlere uygun veri rehberde bulunamadı. Lütfen bir seçim yapınız.");
            Console.WriteLine("* Güncellemeyi sonlandırmak için : (1)");
            Console.WriteLine("* Yeniden denemek için : (2)");
            int a = int.Parse(Console.ReadLine());
            switch(a){
                case 1:
                secim();
                break;
                case 2:
                numaraGuncelleme();
                break;
            }
        }
        

    }
    public static void rehberListeleme(){
        Console.WriteLine("Telefon Rehberi");
        Console.WriteLine("********************");
        for(int i=0; i<name.Count;i++){
            Console.WriteLine(name[i] + " " + surname[i] + " " + phoneNumber[i]);
        }

    }
    public static void rehberdeArama(){
        Console.WriteLine("Arama yapmak istediğiniz tipi seçiniz");
        Console.WriteLine("********************");
        Console.WriteLine ("(1) İsim veya soyisime göre arama yapmak");
        Console.WriteLine ("(2) Telefon numarasına göre arama yapmak");
        int j = int.Parse(Console.ReadLine());
        switch(j){
            case 1:
            Console.WriteLine("İsim veya soyisim giriniz: ");
            string girdi = Console.ReadLine();
            for(int i=0; i<name.Count;i++){
                if(name[i]==girdi){
                    Console.WriteLine($"{name[i]} {surname[i]} {phoneNumber[i]}");
                }
                else if(surname[i]==girdi){
                    Console.WriteLine($"{name[i]} {surname[i]} {phoneNumber[i]}");
                }
            }
            break;
            case 2:
            Console.WriteLine("Telefon numarasını giriniz: ");
            long num = long.Parse(Console.ReadLine());
            for(int i=0; i<name.Count;i++){
                if(phoneNumber[i]==num){
                    Console.WriteLine($"{name[i]} {surname[i]} {phoneNumber[i]}");
                }
            }

            break;
        }

    }
    public static void secim(){
        Console.WriteLine ("Lütfen yapmak istediğiniz işlemi seçin:");
        Console.WriteLine ("**************************");
        Console.WriteLine ("(1) Yeni numara kaydetmek");
        Console.WriteLine ("(2) Varolan numarayı silmek");
        Console.WriteLine ("(3) Varolan numarayı güncellemek");
        Console.WriteLine ("(4) Rehberi listelemek");
        Console.WriteLine ("(5) Rehberde arama yapmak");
        int n = int.Parse(Console.ReadLine());
        switch(n){
            case 1:
            yeniNumara();
            break;
            case 2:
            numaraSilme();
            break;
            case 3:
            numaraGuncelleme();
            break;
            case 4:
            rehberListeleme();
            break;
            case 5:
            rehberdeArama();
            break;
        }

    }
    public static void Main(string[] args)
    {
        secim();
    }
}
